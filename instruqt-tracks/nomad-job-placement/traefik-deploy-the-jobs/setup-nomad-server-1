#!/bin/bash -l

set -e

mkdir -p /root/nomad/jobs

# Write the mongodb.nomad job
cat <<-EOF > /root/nomad/jobs/mongodb.nomad
job "mongodb" {
  datacenters = ["dc1"]
  type = "service"

  group "db" {
    count = 1

    volume "mongodb_vol" {
      type = "host"
      source = "mongodb_mount"
    }

    network {
      mode = "bridge"
    }

    task "mongodb" {
      driver = "docker"

      config {
        image = "mongo"
      }

      volume_mount {
        volume = "mongodb_vol"
        destination = "/data/db"
      }

      resources {
        cpu = 500 # MHz
        memory = 512 # MB
      }

    } # end mongodb task

    service {
      name = "mongodb"
      tags = ["mongodb"]
      port = "27017"

      connect {
        sidecar_service {}
      }
    } # end service

  } # end db group

}
EOF

cat <<-EOF > /root/nomad/jobs/nginx.nomad
job "nginx" {
  region      = "global"
  datacenters = ["dc1"]
  type        = "service"

  group "nginx" {
    count = 1

    task "nginx" {
      driver = "docker"

      config {
        image        = "nginx:1.7"
        network_mode = "host"

        volumes = [
          "local/nginx.toml:/etc/nginx/nginx.toml",
        ]
      }

      template {
        data = <<EOT
[entryPoints]
    [entryPoints.http]
    address = ":8080"
    [entryPoints.nginx]
    address = ":8081"

[api]

    dashboard = true

# Enable Consul Catalog configuration backend.
[consulCatalog]

endpoint = "127.0.0.1:8500"

domain = "consul.localhost"

prefix = "nginx"

constraints = ["tag==service"]
EOT

        destination = "local/nginx.toml"
      }

      resources {
        cpu    = 100
        memory = 128

        network {
          mbits = 10

          port "http" {
            static = 8080
          }

          port "api" {
            static = 8081
          }
        }
      }

      service {
        name = "nginx"

        check {
          name     = "alive"
          type     = "tcp"
          port     = "http"
          interval = "10s"
          timeout  = "2s"
        }
      }
    }
  }
}
EOF

# Write the chatapp.nomad job
cat <<-EOF > /root/nomad/jobs/chat-app.nomad
job "chat-app" {
  datacenters = ["dc1"]
  type = "service"

  group "chat-app" {
    count = 3

    spread {
      attribute = "\${node.unique.name}"
    }

    network {
      mode = "bridge"
      port "http" {
        to = 5000
      }
    }

    task "chat-app" {
      driver = "docker"

      config {
        image = "lhaig/anon-app:light-0.03"
      }

      env {
        "MONGODB_SERVER" = "127.0.0.1"
        "MONGODB_PORT" = "27017"
      }

      resources {
        cpu = 300 # MHz
        memory = 512 # MB
      }

    } # end chat-app task

    service {
      name = "chat-app"
      tags = ["chat-app",
          "nginx.tags=service",
          "nginx.frontend.rule=PathPrefixStrip:/0/",
          ]
      port = "http"
      check {
        name     = "chat-app alive"
        type     = "http"
        path     = "/chats"
        interval = "10s"
        timeout  = "2s"
      }

      connect {
        sidecar_service {
          tags = ["chat-app-proxy"]
          proxy {
            upstreams {
              destination_name = "mongodb"
              local_bind_port = 27017
            }
          }
        }
      } # end connnect
    } # end service

  } # end chat-app group

}
EOF

exit 0
