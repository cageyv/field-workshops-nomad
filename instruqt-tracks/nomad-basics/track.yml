slug: nomad-basics
id: zzdva5ydzqbv
type: track
title: Nomad Basics
teaser: Learn how to run the Nomad agent, run basic commands, and run Nomad jobs.
description: |-
  Nomad is a flexible workload orchestrator that enables an organization to easily deploy and manage any containerized or legacy application using a single, unified workflow. Nomad can run a diverse workload of Docker, non-containerized, microservice, and batch applications.

  Nomad enables developers to use declarative infrastructure-as-code for deploying applications. Nomad uses bin packing to efficiently schedule jobs and optimize for resource utilization. Nomad is supported on macOS, Windows, and Linux.

  This track will introduce you to the open source version of Nomad. You will learn how to run some basic Nomad CLI commands, run a "dev" agent, initialize a simple Nomad job, and use the CLI, UI, and HTTP API to run, check the status of, and stop the job.
icon: https://storage.googleapis.com/instruqt-hashicorp-tracks/logo/nomad.png
tags:
- nomad
- basics
owner: hashicorp
developers:
- roger@hashicorp.com
- rjackson@hashicorp.com
private: true
published: true
challenges:
- slug: nomad-cli
  id: cpo9hhic9zuu
  type: challenge
  title: The Nomad CLI
  teaser: Explore the Nomad Command Line Interface (CLI).
  assignment: |-
    Let's start with some basic Nomad commands, running them in the "Nomad CLI" tab on the left.
    ```
    nomad version
    ```
    You should see "Nomad v0.10.2".

    You can also see the list of all Nomad CLI commands:
    ```
    nomad
    ```
    You'll see some common commands followed by other commands.

    You can get help for any Nomad command by adding `-h`, `-help`, or `--help` after it.  Try this"
    ```
    nomad run -h
    ```
  notes:
  - type: text
    contents: |-
      The open source version of Nomad (Nomad OSS) is a single binary that you can download and run on your laptop or virtual workstation.

      It is written in Go and runs on macOS, Windows, and Linux.

      You can always download the latest version of Nomad OSS here:
      https://www.nomadproject.io/downloads.html
  - type: text
    contents: |-
      Installing Nomad on your laptop or workstation is easy. You simply download the zip file, unpack it, and place it somewhere in your PATH.

      We've included Nomad in a VM in your Instruqt environment so that you don't need to download or install it.
  tabs:
  - title: Nomad CLI
    type: terminal
    hostname: nomad-server
  difficulty: basic
  timelimit: 300
- slug: run-nomad-agent
  id: fcqcho3xfdqh
  type: challenge
  title: Run a Dev Mode Nomad Agent
  teaser: Run a Nomad server in development mode.
  assignment: |-
    Nomad relies on a long running agent on every machine in the cluster. The agent can run either in server or client mode.

    We'll start out by running one in development mode. This mode is used to quickly start an agent that is acting as both a client and a server.

    Start the agent in dev mode on the "Nomad Dev Server" tab:
    ```
    nomad agent -dev -bind=0.0.0.0 &
    ```
    Running the above command will output some log data and run in the background (because of the `&`). We included the `-bind=0.0.0.0` argument so that the Nomad UI can connect to the agent in the Instruqt environment.

    You'll run the rest of the Nomad commands in this challenge in the "Nomad CLI" tab to avoid intermixing of output from the agent and your commands.

    Let's get the status of the Nomad node (the VM) you are running the agent on:
    ```
    nomad node status
    ```

    This will print information about the node including its ID, data center (DC), name, class, drain status, eligibility, and status.

    Verify that the agent is running as a server by getting the list of servers in the local Nomad cluster:
    ```
    nomad server members
    ```
    You'll see that the nomad-server node is a member of and actually the leader of the cluster and is alive.

    In the next challenge, you will run your first Nomad job.
  notes:
  - type: text
    contents: |-
      In this challenge, you will run your first Nomad agent in development mode and explore a few more Nomad CLI commands.

      See https://learn.hashicorp.com/nomad/getting-started/running#starting-the-agent for more on Nomad's development mode.
  tabs:
  - title: Nomad Dev Server
    type: terminal
    hostname: nomad-server
  - title: Nomad CLI
    type: terminal
    hostname: nomad-server
  - title: Nomad UI
    type: service
    hostname: nomad-server
    port: 4646
  difficulty: basic
  timelimit: 900
- slug: run-first-job
  id: 6zskkbhblc43
  type: challenge
  title: Run Your First Nomad Job
  teaser: Run your first Nomad job with the Nomad CLI and UI.
  assignment: |-
    In this challenge, you'll run your first Nomad job using a Nomad job specification file that has been provided.

    You'll first start and stop it with the Nomad CLI. You'll then do the same with the Nomad UI.

    First, inspect the job specification file, `redis.nomad`:
    ```
    cat redis.nomad
    ```

    Note the specifics of the job including the image, resources, and health check.

    Run the redis job:
    ```
    nomad job run redis.nomad
    ```
    As a result, you'll see the lifecycle of the Evaluation, and that the state of the Evaluation has moved from 'pending' to 'complete.'

    Next view the status of the Redis job:
    ```
    nomad status
    ```
    The command returns a high level view of the status of the redis job, most importantly it's status and date submitted.

    Now that the job is running, and you're able to view the status, stop the job:
    ```
    nomad job stop redis
    ```
    Again, you'll see the progress of the job Evaluation as the job is stopped.

    View the status of the redis job again, identifying that the job has stopped:
    ```
    nomad status
    ```

    Next, we'll run through a similar process utilizing the Nomad User Interface.  Click on the tab labeled 'Nomad UI'.

    Within the User Interface, select the `redis` job.  Within the Job Overview secton, click the red 'Start' button.  Nomad will ask for confirmation, and please confirm by clicking 'Yes, Start.'

    In the User Interface, observe that the job is running.  Return to the Nomad CLI tab, and check on the job status:
    ```
    nomad status
    ```

    Observe that within the CLI, the job status is 'running'.

    Back to the Nomad UI tab, click the red 'Stop' button, thereby stopping the job.  Once again, the Nomad UI will request confirmation.  Please confirm by clicking 'Yes, Stop.'

    Within the Nomad UI, validate that the job has stopped.  Return to the Nomad CLI tab, and confirm that a status of 'stopped' is also reflected in the CLI:
    ```
    nomad status
    ```

    In the next challenge, you will run the same job and check its status using the Nomad HTTP API.
  notes:
  - type: text
    contents: |-
      In this challenge, you'll run your first Nomad job using a Nomad job specification file that has been provided.

      See https://learn.hashicorp.com/nomad/getting-started/jobs for more on running Nomad jobs.
  tabs:
  - title: Nomad CLI
    type: terminal
    hostname: nomad-server
  - title: Nomad UI
    type: service
    hostname: nomad-server
    port: 4646
  difficulty: basic
  timelimit: 900
- slug: use-nomad-http-api
  id: drttknux1ay7
  type: challenge
  title: Use Nomad's HTTP API
  teaser: Run and stop a job with Nomad's HTTP API.
  assignment: |-
    In this challenge, you'll run the same Nomad job using Nomad's HTTP API.

    First, create the job json payload using the `redis.nomad` file.  Click on the 'Nomad CLI' tab and execute the following:
    ```
    nomad job run -output redis.nomad > payload.json
    ```

    Run the following command to post the payload file to Nomad, registering the job.  For more information regarding creating jobs using the API, refer to https://www.nomadproject.io/api/jobs.html#create-job
    ```
    curl --data @payload.json http://localhost:4646/v1/jobs | jq
    ```

    The json data returned will include a job index, and evaluation ID, and other information.

    With the job running, we can use the Nomad API to query the job details.  For more information regarding querying jobs using the API, refer to https://www.nomadproject.io/api/jobs.html#read-job-summary)
    ```
    curl http://localhost:4646/v1/job/redis/summary | jq
    ```

    Note that in the json response, the job ID, Namespace, and counts for number of jobs failed, started, running, etc., are all displayed.

    Now that we have our job running, let's use the API to stop the job.  For more information regarding stopping a job using the API, refer to https://www.nomadproject.io/api/jobs.html#stop-a-job.
    ```
    curl --request DELETE http://localhost:4646/v1/job/redis | jq
    ```

    The json data returned will include a job index, and evaluation ID, and other information.

    To ensure the job has been properly terminated, query the job summary again:
    ```
    curl http://localhost:4646/v1/job/redis/summary | jq
    ```

    The result should show that no jobs are currently running, and the number of complete jobs has increased.
  notes:
  - type: text
    contents: |-
      In this challenge, you'll run the same Nomad job using Nomad's HTTP API.

      See https://www.nomadproject.io/api/jobs.html for more on running Nomad jobs with Nomad's HTTP API.
  tabs:
  - title: Nomad CLI
    type: terminal
    hostname: nomad-server
  - title: Nomad UI
    type: service
    hostname: nomad-server
    port: 4646
  difficulty: basic
  timelimit: 900
checksum: "13623272872679080052"
